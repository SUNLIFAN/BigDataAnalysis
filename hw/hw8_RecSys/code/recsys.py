# -*- coding: utf-8 -*-
"""recsys.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1J66I5mFFj1K2UwYxQEltzJmui_3_WZ_O
"""

import pandas as pd
from surprise import Dataset
from surprise import Reader

ratings = pd.read_csv('ml-latest-small/ratings.csv')

ratings.head(10)

reader = Reader(rating_scale=(0.5, 5))

# Loads Pandas dataframe
data = Dataset.load_from_df(ratings[['userId', 'movieId', 'rating']], reader)

from surprise import KNNWithMeans

# To use item-based cosine similarity
sim_options = {
    "name": "cosine",
    "user_based": False,  # Compute  similarities between items
}
knn = KNNWithMeans(sim_options=sim_options)

trainingSet = data.build_full_trainset()

knn.fit(trainingSet)

threshold = 4.0

all_users = list(set(ratings['userId'].values))

user2movies = {user:[] for user in all_users}

for i in range(len(ratings)):
  user = ratings['userId'].iloc[i]
  movie = ratings['movieId'].iloc[i]
  user2movies[user].append(movie)

movies_data = pd.read_csv('ml-latest-small/movies.csv')

movies_data.head(10)

all_movies = set(movies_data['movieId'].values)

len(all_movies)

user2candidates = {user:[] for user in all_users}

for movie_id in all_movies:
  for user in user2movies.keys():
    if movie_id not in user2movies[user]:
      user2candidates[user].append(movie_id)

user2recommend = {user:[] for user in all_users}

for user in user2candidates.keys():
  for movie in user2candidates[user]:
    score = knn.predict(user, movie).est
    if score >= threshold:
      user2recommend[user].append((movie, score))

count = 0
for user in user2recommend.keys():
  count += len(user2recommend[user])
  print(len(user2recommend[user]))
print(count)

ans = []

for user in all_users:
  if len(user2recommend[user]) > 0:
    for movie, score in sorted(user2recommend[user], key=lambda x: x[1], reverse=True)[0:3]:
      ans.append([user, movie, score])

result = pd.DataFrame(data=ans, columns=['userId', 'movieId'])
result.head()

result.to_csv('movie.csv',index=False)